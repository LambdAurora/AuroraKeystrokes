import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name + "-fabric"

minecraft {
}

repositories {
	mavenLocal()
    mavenCentral()
	maven {
		name = "AperLambda"
		url = 'https://aperlambda.github.io/maven'
	}
	maven { url = "https://jitpack.io" }
}

configurations {
	shadow
	implementation.extendsFrom shadow
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.github.lambdaurora:spruceui:${project.spruceui_version}"
	include "com.github.lambdaurora:spruceui:${project.spruceui_version}"

	shadow "com.electronwill.night-config:core:3.6.3"
	shadow "com.electronwill.night-config:toml:3.6.3"

	shadow("org.aperlambda:lambdajcommon:1.8.0") {
		// Minecraft already has all that google crap.
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	withSourcesJar()
}

jar {
	from "LICENSE"
}

task shadowJar(type: Jar) {
	archiveClassifier.set("dev")

	from sourceSets.main.output

	from {
		configurations.shadow.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

task shadowRemapJar(type: RemapJarTask) {
	dependsOn shadowJar

	input = file("${project.buildDir}/libs/$archivesBaseName-$version-dev.jar")
	archiveName = "${archivesBaseName}-${version}.jar"
	addNestedDependencies = true
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
