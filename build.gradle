//file:noinspection GroovyAssignabilityCheck
plugins {
	id 'fabric-loom' version '0.11.+'
	id 'io.github.juuxel.loom-quiltflower' version '1.+'
	id 'java-library'
	id 'maven-publish'
	id 'org.quiltmc.quilt-mappings-on-loom' version '4.+'
}

def targetJavaVersion = 17

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name + "-fabric"

repositories {
	mavenLocal()
    mavenCentral()
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	maven {
		url "https://jitpack.io"
	}
}

configurations {
	shadow
	api.extendsFrom shadow
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.layered {
		it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:v2"))
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
	include "dev.lambdaurora:spruceui:${project.spruceui_version}"

	modImplementation 'com.electronwill.night-config:core:3.6.5'
	modImplementation 'com.electronwill.night-config:toml:3.6.5'
	include 'com.electronwill.night-config:core:3.6.5'
	include 'com.electronwill.night-config:toml:3.6.5'
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.deprecation(true)
	it.options.incremental(true)
	it.options.release.set(targetJavaVersion)
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		mavenLocal()
	}
}

quiltflower {
	addToRuntimeClasspath.set(true)
}