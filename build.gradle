//file:noinspection GroovyAssignabilityCheck
plugins {
	id 'fabric-loom' version '0.10.+'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.2.1'
	id 'java-library'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
}

import net.fabricmc.loom.task.RemapJarTask

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name + "-fabric"

minecraft {
}

repositories {
	mavenLocal()
    mavenCentral()
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	maven {
		name "AperLambda"
		url 'https://aperlambda.github.io/maven'
	}
	maven {
		url "https://jitpack.io"
	}
}

configurations {
	shadow
	api.extendsFrom shadow
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
	include "dev.lambdaurora:spruceui:${project.spruceui_version}"

	shadow 'com.electronwill.night-config:core:3.6.5'
	shadow 'com.electronwill.night-config:toml:3.6.5'

	shadow("org.aperlambda:lambdajcommon:1.8.1") {
		// Minecraft already has all that google crap.
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"

	it.options.release.set(17)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

shadowJar {
	dependsOn jar
	configurations = [project.configurations.shadow]
	archiveClassifier.set("dev")

	relocate "com.electronwill.nightconfig", "dev.lambdaurora.aurorakeystrokes.shadow.nightconfig"
}
remapJar.dependsOn(shadowJar)

task shadowRemapJar(type: RemapJarTask) {
	dependsOn shadowJar

	input = file("${project.buildDir}/libs/$archivesBaseName-${project.version}-dev.jar")
	archiveName = "${archivesBaseName}-${project.version}.jar"
	addNestedDependencies.set(true)
}
build.dependsOn(shadowRemapJar)

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		mavenLocal()
	}
}
quiltflower {
	addToRuntimeClasspath.set(true)
}